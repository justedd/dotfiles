# firs


a_truthy_value
a_falsey_value
be_falsy
a_falsy_value
a_nil_value
a_value > 3
a_value < 3
a_value <= 3
a_value == 3
a_value === 3
an_instance_of(Integer)
a_kind_of(Integer)
a_value_between(1, 10)
a_value_within(0.1).of(3)
within(0.1).of(3)
a_block_changing
changing
a_collection_containing_exactly(1, 2)
containing_exactly(1, 2)
a_range_covering(1, 2)
covering(1, 2)
ending_with(23)
a_collection_ending_with(23)
a_string_ending_with("z")
an_object_eq_to(3)
eq_to(3)
an_object_eql_to(3)
eql_to(3)
an_object_equal_to(3)
equal_to(3)
an_object_existing
existing
an_object_having_attributes(:age => 32)
a_string_including("a")
a_collection_including("a")
a_hash_including(:a => 5)
including(3)
a_string_matching(/foo/)
an_object_matching(/foo/)
match_regex(/foo/)
matching(/foo/)
a_block_outputting('foo').to_stdout
a_block_outputting('foo').to_stderr
a_block_raising(ArgumentError)
raising(ArgumentError)
an_object_responding_to(:foo)
responding_to(:foo)
an_object_satisfying { }
satisfying { }
a_collection_starting_with(23)
a_string_starting_with("z")
starting_with("d")
a_block_throwing(:foo)
throwing(:foo)
a_block_yielding_control
yielding_control
a_block_yielding_with_no_args
yielding_with_no_args
a_block_yielding_with_args
yielding_with_args
a_block_yielding_successive_args
yielding_successive_args



# second

be_truthy
be_falsey
be_falsey
be_falsey
be_nil
be > 3
be < 3
be <= 3
be == 3
be === 3
be_an_instance_of(Integer)
be_a_kind_of(Integer)
be_between(1, 10)
be_within(0.1).of(3)
be_within(0.1).of(3)
change
change
contain_exactly(1, 2)
contain_exactly(1, 2)
cover(1, 2)
cover(1, 2)
end_with(23)
end_with(23)
end_with("z")
eq 3
eq 3
eql 3
eql 3
equal 3
equal 3
exist
exist
have_attributes(:age => 32)
include("a")
include("a")
include(:a => 5)
include(3)
match(/foo/)
match(/foo/)
match(/foo/)
match(/foo/)
output('foo').to_stdout
output('foo').to_stderr
raise_error(ArgumentError)
raise_error(ArgumentError)
respond_to(:foo)
respond_to(:foo)
satisfy { }
satisfy { }
start_with(23)
start_with("z")
start_with("d")
throw_symbol(:foo)
throw_symbol(:foo)
yield_control
yield_control
yield_with_no_args
yield_with_no_args
yield_with_args
yield_with_args
yield_successive_args
yield_successive_args



# third

a truthy value
a falsey value
be falsy
a falsy value
a nil value
a value > 3
a value < 3
a value <= 3
a value == 3
a value === 3
an instance of Integer
a kind of Integer
a value between 1 and 10 (inclusive)
a value within 0.1 of 3
within 0.1 of 3
a block changing result
changing result
a collection containing exactly 1 and 2
containing exactly 1 and 2
a range covering 1 and 2
covering 1 and 2
ending with 23
a collection ending with 23
a string ending with 'z'
an object eq to 3
eq to 3
an object eql to 3
eql to 3
an object equal to 3
equal to 3
an object existing
existing
an object having attributes {:age => 32}
a string including 'a'
a collection including 'a'
a hash including {:a => 5}
including 3
a string matching /foo/
an object matching /foo/
match regex /foo/
matching /foo/
a block outputting 'foo' to stdout
a block outputting 'foo' to stderr
a block raising ArgumentError
raising ArgumentError
an object responding to #foo
responding to #foo
an object satisfying block
satisfying block
a collection starting with 23
a string starting with 'z'
starting with 'd'
a block throwing :foo
throwing :foo
a block yielding control
yielding control
a block yielding with no args
yielding with no args
a block yielding with args
yielding with args
a block yielding successive args()
yielding successive args()

